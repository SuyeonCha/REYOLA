/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.23
 * Generated at: 2018-06-22 04:12:08 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class homeResult_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=EUC-KR\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<style>\r\n");
      out.write("div{\r\n");
      out.write("    margin: 100px auto;\r\n");
      out.write("    width: 60%;\r\n");
      out.write("    height:300px;\r\n");
      out.write("    padding: 30px;\r\n");
      out.write("    background-color: ivory;\r\n");
      out.write("}\r\n");
      out.write("*{\r\n");
      out.write("font-size:1em;\r\n");
      out.write("}\r\n");
      out.write("body {\r\n");
      out.write("  \t \tbackground-image: url(\"home/home.jpg\") ;\r\n");
      out.write("   \t\tbackground-color: #cccccc;\r\n");
      out.write("\t\t}\r\n");
      out.write(".grad{\r\n");
      out.write("font-size:150%;\r\n");
      out.write("background:  #FC5C7D;  /* fallback for old browsers */\r\n");
      out.write("background:-webkit-linear-gradient(to left, #6A82FB, #FC5C7D);   /* Chrome 10-25, Safari 5.1-6 */\r\n");
      out.write("\r\n");
      out.write("background:linear-gradient(to left, #6A82FB, #FC5C7D);/* W3C, IE 10+/ Edge, Firefox 16+, Chrome 26+, Opera 12+, Safari 7+ */\r\n");
      out.write("  -webkit-background-clip: text;\r\n");
      out.write("  -webkit-text-fill-color: transparent;\r\n");
      out.write("}\r\n");
      out.write("b{\r\n");
      out.write("font-size:120%;\r\n");
      out.write("background:  #00c3ff;  /* fallback for old browsers */\r\n");
      out.write("background:-webkit-linear-gradient(to right, #ffff1c, #00c3ff);   /* Chrome 10-25, Safari 5.1-6 */\r\n");
      out.write("\r\n");
      out.write("background:linear-gradient(to right, #ffff1c, #00c3ff);/* W3C, IE 10+/ Edge, Firefox 16+, Chrome 26+, Opera 12+, Safari 7+ */\r\n");
      out.write("  -webkit-background-clip: text;\r\n");
      out.write("  -webkit-text-fill-color: transparent;\r\n");
      out.write("  \r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");

String num = request.getParameter("home");
if(num.equals("1")){
	
      out.write("\r\n");
      out.write("\t<div>\r\n");
      out.write("\t<span class=\"grad\">1번 문이 두 개인 집</span>을 선택했다면 <br>\r\n");
      out.write("<br>\r\n");
      out.write("\t외부적인 영역 즉 사회생활에 불만을 가지거나 불편함이 있는 것으로 해석됩니다. <br>\r\n");
      out.write("\t이로인해 이탈하고 싶은 마음과 다른 방식으로 세상과 소통하고 싶어하는 성향을 가진 사람으로 볼 수 있습니다.<br>\r\n");
      out.write("\t<h3>그렇지만! 세상에서의 불편함을 찾아 <br>다른 방식으로 소통하며 바꾸어 갈 당신이 바로 <b>Real YOLO</b>!</h3>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t");

}else if(num.equals("2")){
	
      out.write("\r\n");
      out.write("\t<div>\r\n");
      out.write("\t<span class=\"grad\">2번 창문이 많은 집</span>은 <br>\r\n");
      out.write("<br>\r\n");
      out.write("\t자신이 외부적인 세계를 들여다보는 통로로 많으면 많을 수록 관심받고 싶어하는 성향이 강하다고 볼 수 있습니다. <br>\r\n");
      out.write("\t다른 사람을 많이 의식하고 인정받고 싶어하는 마음이 있습니다.<br>\r\n");
      out.write("\t<h3>이젠 다른 사람의 시선보다 자신의 마음에 더욱 귀 기울여 보는 것은 어떨까요? <br> 옆 부스의 <b>SELF-REGARD</b>로 당신을 초대합니다!</h3>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t");

}else if(num.equals("3")){
	
      out.write("\r\n");
      out.write("\t<div>\r\n");
      out.write("\t<span class=\"grad\">3번 지붕이 큰 집</span>은 <br>\r\n");
      out.write("\t<br>\r\n");
      out.write("\t자신을 보호하려는 마음이 강하며 다른사람과 어울리는 것 보다 자신만의 시간을 즐기고 독립적인 성향을 보입니다.<br>\r\n");
      out.write("\t다른사람에 대한 불신이나 불안감이 많은 사람으로도 볼 수 있습니다.<br>\r\n");
      out.write("\t<h3>자신의 마음에 귀 기울이는 당신! 옆 부스의 <b>SELF-REGARD</b>로 당신을 초대합니다!</h3>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t");

}else if(num.equals("4")){
	
      out.write("<div>\r\n");
      out.write("\t<span class=\"grad\">4번 굴뚝이 있는 집</span>은 <br>\r\n");
      out.write("\t<br>\r\n");
      out.write("\t불을 피우는 것으로 따뜻한 집안 즉 가족의 화목을 중요시하는 성향을 가진 사람입니다. <br>\r\n");
      out.write("\t<h3>학교생활로 바빠 연락하지 못했던 당신, 오늘 <b>사랑하는 가족에게 전화 한 통</b> 어때요?</h3><br>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t");

}else{
	
}


      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
